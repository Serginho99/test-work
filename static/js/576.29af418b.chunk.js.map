{"version":3,"file":"static/js/576.29af418b.chunk.js","mappings":"kRAOMA,EAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GAGU,SAASC,EAAT,GAAoD,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OACtD,OACE,SAACC,EAAA,EAAD,CACE,kBAAgB,yBAChB,mBAAiB,+BACjBH,KAAMA,EACNI,QAASH,EACTI,sBAAoB,EACpBC,MAAO,CAAEC,SAAUC,EAAAA,GACnBC,UAAW,CACTF,SAAU,CACRG,QAAS,MATf,UAaE,SAACC,EAAA,EAAD,CAAMC,GAAIZ,EAAV,UACE,SAACa,EAAA,EAAD,CAAKC,GAAIzB,EAAT,UACE,SAAC0B,EAAA,EAAD,CAAYC,GAAG,+BAA+BF,GAAI,CAAEG,GAAI,GAAxD,gBACGf,QADH,IACGA,OADH,EACGA,EAAQgB,KAAI,SAAAC,GAAI,OACf,wBAAmBA,EAAKC,OAAfD,EAAKH,GADC,WAQ5B,C,4CCtCc,SAASK,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOpB,EAAP,KAAeuB,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBL,EAAAA,EAAAA,WAAS,GAAjC,eAAOtB,EAAP,KAAa4B,EAAb,KAEMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAPI,wCAsB9B,WAA2BjB,GAA3B,8EACEY,GAAQ,GADV,kBAGsBF,GAASQ,EAAAA,EAAAA,IAAWlB,IAH1C,OAGUmB,EAHV,OAIIV,GAAU,OAAIU,EAAIC,UAJtB,gDAMIC,QAAQC,IAAI,KAAMC,SANtB,0DAtB8B,sBAgC9B,OAvBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAEsBd,GAASe,EAAAA,EAAAA,OAF/B,OAEUN,EAFV,OAGIX,GAAS,OAAIW,EAAIC,UAHrB,gDAKIC,QAAQC,IAAI,KAAMC,SALtB,0DADc,uBAAC,WAAD,wBASdG,EAED,GAAE,KAaD,iCACE,+BACGnB,QADH,IACGA,OADH,EACGA,EAAOL,KAAI,SAAAC,GAAI,OACd,gBAAkBH,GAAIG,EAAKH,GAA3B,UACGG,EAAKwB,KADR,KACc,SAAC,KAAD,CAAMC,GAAE,iBAAYzB,EAAKH,IAAzB,sBAA+C,KAC3D,mBAAQ6B,QAAS,kBAtCG,2CAsCGC,CAAY3B,EAAKH,GAAvB,EAAjB,yBAFOG,EAAKH,GADA,MAOjBa,IAAW,qCACXG,IAAS,yCACV,SAACjC,EAAD,CAAYC,KAAMA,EAAMC,YAvCR,kBAAM2B,GAAQ,EAAd,EAuCkC1B,OAAQA,MAG/D,CCnDc,SAAS6C,IACtB,OAAO,SAAC1B,EAAD,GACR,C,gFCLM,IAAMU,EAAoB,SAAAiB,GAAK,OAAIA,EAAMzB,MAAM0B,SAAhB,EAEzBhB,EAAkB,SAAAe,GAAK,OAAIA,EAAMzB,MAAMS,KAAhB,C","sources":["components/UserAlbums/UserAlbums.jsx","components/Users/Users.jsx","pages/UserPage.jsx","redux/users/selectors.js"],"sourcesContent":["import React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport Typography from '@mui/material/Typography';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function UserAlbums({ open, handleClose, albums }) {\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={open}\n      onClose={handleClose}\n      closeAfterTransition\n      slots={{ backdrop: Backdrop }}\n      slotProps={{\n        backdrop: {\n          timeout: 500,\n        },\n      }}\n    >\n      <Fade in={open}>\n        <Box sx={style}>\n          <Typography id=\"transition-modal-description\" sx={{ mt: 2 }}>\n            {albums?.map(item => (\n              <li key={item.id}>{item.title}</li>\n            ))}\n          </Typography>\n        </Box>\n      </Fade>\n    </Modal>\n  );\n}\n","import UserAlbums from 'components/UserAlbums/UserAlbums';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getUsers, userAlbums } from 'redux/users/usersOperations';\nimport { isErrorSelector, isLoadingSelector } from 'redux/users/selectors';\n\nexport default function Users() {\n  const [users, setUsers] = useState([]);\n  const [albums, setAlbums] = useState([]);\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const handleClose = () => setOpen(false);\n  const loading = useSelector(isLoadingSelector);\n  const error = useSelector(isErrorSelector);\n\n  useEffect(() => {\n    async function fetchUsers() {\n      try {\n        const res = await dispatch(getUsers());\n        setUsers([...res.payload]);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    fetchUsers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function fetchAlbums(id) {\n    setOpen(true);\n    try {\n      const res = await dispatch(userAlbums(id));\n      setAlbums([...res.payload]);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n\n  return (\n    <>\n      <ul>\n        {users?.map(item => (\n          <li key={item.id} id={item.id}>\n            {item.name} <Link to={`/posts/${item.id}`}>to posts</Link>{' '}\n            <button onClick={() => fetchAlbums(item.id)}>to albums</button>\n          </li>\n        ))}\n      </ul>\n      {loading && <p>load.....</p>}\n      {error && <p>try later...</p>}\n      <UserAlbums open={open} handleClose={handleClose} albums={albums} />\n    </>\n  );\n}\n","import Users from 'components/Users/Users';\nimport React from 'react';\n\nexport default function UserPage() {\n  return <Users />;\n}\n","export const isLoadingSelector = state => state.users.isLoading;\n\nexport const isErrorSelector = state => state.users.error;\n\nexport const usersSelector = state => state.users.users;\n\nexport const usersPostsSelector = state => state.users.posts;\n\nexport const usersAlbumsSelector = state => state.users.albums;\n"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","UserAlbums","open","handleClose","albums","Modal","onClose","closeAfterTransition","slots","backdrop","Backdrop","slotProps","timeout","Fade","in","Box","sx","Typography","id","mt","map","item","title","Users","useState","users","setUsers","setAlbums","dispatch","useDispatch","setOpen","loading","useSelector","isLoadingSelector","error","isErrorSelector","userAlbums","res","payload","console","log","message","useEffect","getUsers","fetchUsers","name","to","onClick","fetchAlbums","UserPage","state","isLoading"],"sourceRoot":""}